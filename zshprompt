function precmd {
    local TERMWIDTH
    (( TERMWIDTH = ${COLUMNS} - 1 ))

    # Truncate the path if it's too long.
    PR_FILLBAR=""
    PR_PWDLEN=""

    local promptsize=${#${(%):---( %m, %n )---()--}}
    local pwdsize=${#${(%):-%~}}

    if [[ "$promptsize + $pwdsize" -gt $TERMWIDTH ]]; then
    ((PR_PWDLEN=$TERMWIDTH - $promptsize))
    else
    PR_FILLBAR="\${(l.(($TERMWIDTH - ($promptsize + $pwdsize)))..${PR_HBAR}.)}"
    fi

}

function prompttopleft {
    PR_TL="tput cup 0 0; tput el; tput el1"
    eval "$PR_TL"
}

setprompt () {
    setopt prompt_subst

    # Autoload zsh functions.
    fpath=(~/.zsh/functions $fpath)
    autoload -U ~/.zsh/functions/*(:t)

    # Enable auto-execution of functions.
    typeset -ga preexec_functions
    typeset -ga precmd_functions
    typeset -ga chpwd_functions

    # Append git functions needed for prompt.
    preexec_functions+='preexec_update_git_vars'
    precmd_functions+='precmd_update_git_vars'
    chpwd_functions+='chpwd_update_git_vars'
    
    #precmd_functions+='prompttopleft'

    # See if we can use colors.
    autoload -U colors zsh/terminfo
    if [[ "$terminfo[colors]" -ge 8 ]]; then
    colors
    fi
    for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
        eval PR_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
        #eval PR_LIGHT_$color='%{$fg[${(L)color}]%}'
        #eval PR_$color='%{$fg[${(L)color}]%}'
        eval PR_LIGHT_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
        (( count = $count + 1 ))
    done
    PR_NO_COLOUR="%{$terminfo[sgr0]%}"

    # See if we can use extended characters to look nicer.
    typeset -A altchar
    set -A altchar ${(s..)terminfo[acsc]}
    PR_SET_CHARSET="%{$terminfo[enacs]%}"
    PR_SHIFT_IN="%{$terminfo[smacs]%}"
    PR_SHIFT_OUT="%{$terminfo[rmacs]%}"
    PR_HBAR=${altchar[q]:--}
    PR_ULCORNER=${altchar[l]:--}
    PR_LLCORNER=${altchar[m]:--}
    PR_LRCORNER=${altchar[j]:--}
    PR_URCORNER=${altchar[k]:--}

    # Decide if we need to set titlebar text.
    case $TERM in
    xterm*)
        PR_TITLEBAR=$'%{\e]0;%(!.-=*[ROOT]*=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y\a%}'
    ;;
    rxvt*)
        PR_TITLEBAR=$'%{\e]2;%(!.-=*[ROOT]*=- | .)%n@%m:%~ | %y\a%}'
    ;;
    screen)
        PR_TITLEBAR=$'%{\e_screen \005 (\005t) | %(!.-=[ROOT]=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y\e\\%}'
    ;;
    *)
        PR_TITLEBAR=''
    ;;
    esac

    # Finally, the prompt.
    if [ -z $STY ]
    then
        PROMPT='$PR_BLUE%m $PR_GREEN%n $PR_WHITE$(prompt_git_info)   $PR_WHITE'
    else  
        PROMPT='$PR_BLUE%m $PR_GREEN%n $PR_WHITE$(prompt_git_info) $PR_BLUE($STY)   $PR_WHITE'
    fi
}

